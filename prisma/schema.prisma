generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int          @id @default(autoincrement())
  name         String       @db.VarChar(255)
  email        String       @db.VarChar(255) @unique
  password     String       @db.VarChar(255)
  bankAccounts BankAccount[] // One-to-Many
  profile      Profiles?    // One-to-One

  @@map("user")
}

model BankAccount {
  id                  Int          @id @default(autoincrement())
  user_id             Int
  bank_name           String
  bank_account_number String      
  balance             Int
  user                User         @relation(fields: [user_id], references: [id], onDelete: Cascade) // Many-to-One
  transactionsAsSource Transactions[] @relation("sourceTransactions")
  transactionsAsDestination Transactions[] @relation("destinationTransactions")
}

model Profiles {
  id             Int    @id @default(autoincrement())
  identity_type  String
  identity_number String 
  address        String
  user_id        Int     @unique
  user           User    @relation(fields: [user_id], references: [id], onDelete: Cascade) 
}

model Transactions {
  id                    Int    @id @default(autoincrement())
  source_account_id      Int
  destination_account_id Int
  amount                Int
  sourceAccount         BankAccount @relation("sourceTransactions", fields: [source_account_id], references: [id], onDelete: Cascade)
  destinationAccount    BankAccount @relation("destinationTransactions", fields: [destination_account_id], references: [id], onDelete: Cascade)

  @@unique([source_account_id, destination_account_id]) // Many-to-Many: 
}
